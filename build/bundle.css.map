{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "ScatterChart.svelte",
    "AxisX.svelte",
    "AxisY.svelte",
    "QuadTree.svelte",
    "LayerCake.svelte",
    "Html.svelte",
    "ScaledSvg.svelte",
    "Svg.svelte",
    "App.svelte",
    "Divider.svelte",
    "Map.svelte",
    "Media.svelte",
    "ONSFooter.svelte",
    "ONSHeader.svelte",
    "Scroller.svelte"
  ],
  "sourcesContent": [
    "<svelte:options accessors={true} />\n\n<script>\n\timport { LayerCake, Svg, WebGL, Html } from 'layercake';\n\n\timport Plot from './shared/Scatter.svelte';\n\timport AxisX from './shared/AxisX.svelte';\n\timport AxisY from './shared/AxisY.svelte';\n\timport QuadTree from './shared/QuadTree.svelte';\n\t\n\texport let data;\n\texport let diameter = 5;\n\texport let colors = [[128, 128, 128]];\n\texport let categories = null;\n\texport let selected = null;\n\n\texport let xKey = 'x';\n\texport let yKey = 'y';\n\texport let catKey = 'group';\n\t\n\tconst padding = 6;\n</script>\n\n<style>\n\t.chart-container {\n\t\twidth: 100%;\n\t\theight: calc(100% - 90px);\n\t}\n\t.tooltip {\n\t\tposition: absolute;\n\t\tdisplay: block;\n\t\tbackground-color: rgba(255, 255, 255, 0.7);\n\t\tpadding: 5px;\n\t\tcolor: #000;\n\t}\n\t.circle {\n\t\tposition: absolute;\n\t\tborder-radius: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\tpointer-events: none;\n\t\twidth: 8px;\n\t\theight: 8px;\n\t\tborder: 2px solid #fff;\n\t}\n</style>\n\n<div class=\"chart-container\">\n\t<LayerCake\n\t\tpadding={{ top: 10, right: 5, bottom: 20, left: 25 }}\n\t\tx={xKey}\n\t\ty={yKey}\n\t\txPadding={[padding, padding]}\n\t\tyPadding={[padding, padding]}\n\t\t{data}\n\t>\n\t\t<Svg>\n\t\t\t<AxisX\n\t\t\t\tticks={5}\n\t\t\t/>\n\t\t\t<AxisY\n\t\t\t\tticks={5}\n\t\t\t/>\n\t\t</Svg>\n\n\t\t<WebGL>\n\t\t\t<Plot\n\t\t\t\t{diameter}\n\t\t\t\t{colors}\n\t\t\t\t{categories}\n\t\t\t\t{catKey}\n\t\t\t\t{selected}\n\t\t\t/>\n\t\t</WebGL>\n\t\t\n\t\t<Html>\n\t\t\t<QuadTree\n\t\t\t\tlet:x\n\t\t\t\tlet:y\n\t\t\t\tlet:visible\n\t\t\t\tlet:found\n\t\t\t\t{selected}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"circle\"\n\t\t\t\t\tstyle=\"top:{y}px;left:{x}px;display: { visible ? 'block' : 'none' };\"\n\t\t\t\t></div>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"tooltip\"\n\t\t\t\t\tstyle=\"top:{y+ 5}px;left:{x + 10}px;display: { visible ? 'block' : 'none' };\"\n\t\t\t\t>{#if found.lad_name}{found.lad_name} {found.lsoa_name}<br />{/if}{xKey}: {Number(found[xKey]).toFixed(2)}<br/>{yKey}: {Number(found[yKey]).toFixed(2)}<br/></div>\n\t\t\t</QuadTree>\n\t\t</Html>\n\t</LayerCake>\n</div>",
    "<script>\n\timport { getContext } from 'svelte';\n\n\tconst { width, height, xScale, yScale, yRange } = getContext('LayerCake');\n\n\texport let gridlines = true;\n\texport let formatTick = d => d;\n\texport let baseline = false;\n\texport let snapTicks = false;\n\texport let ticks = undefined;\n\texport let xTick = undefined;\n\texport let yTick = 16;\n\texport let dxTick = 0;\n\texport let dyTick = 0;\n\n\t$: isBandwidth = typeof $xScale.bandwidth === 'function';\n\n\t$: tickVals = Array.isArray(ticks) ? ticks :\n\t\tisBandwidth ?\n\t\t\t$xScale.domain() :\n\t\t\t$xScale.ticks(ticks);\n\n\tfunction textAnchor(i) {\n\t\tif (snapTicks === true) {\n\t\t\tif (i === 0) {\n\t\t\t\treturn 'start';\n\t\t\t}\n\t\t\tif (i === tickVals.length - 1) {\n\t\t\t\treturn 'end';\n\t\t\t}\n\t\t}\n\t\treturn 'middle';\n\t}\n</script>\n\n<g class='axis x-axis'>\n\t{#each tickVals as tick, i}\n\t\t<g class='tick tick-{ tick }' transform='translate({$xScale(tick)},{$yRange[0]})'>\n\t\t\t{#if gridlines !== false}\n\t\t\t\t<line y1='{$height * -1}' y2='0' x1='0' x2='0'></line>\n\t\t\t{/if}\n\t\t\t<text\n\t\t\t\tx=\"{xTick || isBandwidth ? $xScale.bandwidth() / 2 : 0 }\"\n\t\t\t\ty='{yTick}'\n\t\t\t\tdx='{dxTick}'\n\t\t\t\tdy='{dyTick}'\n\t\t\t\ttext-anchor='{textAnchor(i)}'>{formatTick(tick)}</text>\n\t\t</g>\n\t{/each}\n\t{#if baseline === true}\n\t\t<line class=\"baseline\" y1='{$height + 0.5}' y2='{$height + 0.5}' x1='0' x2='{$width}'></line>\n\t{/if}\n</g>\n\n<style>\n\t.tick {\n\t\tfont-size: .725em;\n\t\tfont-weight: 200;\n\t}\n\n\tline,\n\t.tick line {\n\t\tstroke: #aaa;\n\t\tstroke-dasharray: 2;\n\t}\n\n\t.tick text {\n\t\tfill: #666;\n\t}\n\n\t.baseline {\n\t\tstroke-dasharray: 0;\n\t}\n\n\t.tick.tick-0 line {\n\t\tstroke-dasharray: 0;\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\tconst { padding, xRange, xScale, yScale } = getContext('LayerCake');\n\n\texport let ticks = 4;\n\texport let gridlines = true;\n\texport let formatTick = d => d;\n\texport let xTick = 0;\n\texport let yTick = 0;\n\texport let dxTick = 0;\n\texport let dyTick = -4;\n\texport let textAnchor = 'start';\n\n\t$: isBandwidth = typeof $yScale.bandwidth === 'function';\n\n\t$: tickVals = Array.isArray(ticks) ? ticks :\n\t\tisBandwidth ?\n\t\t\t$yScale.domain() :\n\t\t\t$yScale.ticks(ticks);\n</script>\n\n<g class='axis y-axis' transform='translate({-$padding.left}, 0)'>\n\t{#each tickVals as tick, i}\n\t\t<g class='tick tick-{tick}' transform='translate({$xRange[0] + (isBandwidth ? $padding.left : 0)}, {$yScale(tick)})'>\n\t\t\t{#if gridlines !== false}\n\t\t\t\t<line\n\t\t\t\t\tx2='100%'\n\t\t\t\t\ty1={yTick + (isBandwidth ? ($yScale.bandwidth() / 2) : 0)}\n\t\t\t\t\ty2={yTick + (isBandwidth ? ($yScale.bandwidth() / 2) : 0)}\n\t\t\t\t></line>\n\t\t\t{/if}\n\t\t\t<text\n\t\t\t\tx='{xTick}'\n\t\t\t\ty='{yTick + (isBandwidth ? $yScale.bandwidth() / 2 : 0)}'\n\t\t\t\tdx='{isBandwidth ? -5 : dxTick}'\n\t\t\t\tdy='{isBandwidth ? 4 : dyTick}'\n\t\t\t\tstyle=\"text-anchor:{isBandwidth ? 'end' : textAnchor};\"\n\t\t\t>{formatTick(tick)}</text>\n\t\t</g>\n\t{/each}\n</g>\n\n<style>\n\t.tick {\n\t\tfont-size: .725em;\n\t\tfont-weight: 200;\n\t}\n\n\t.tick line {\n\t\tstroke: #aaa;\n\t\tstroke-dasharray: 2;\n\t}\n\n\t.tick text {\n\t\tfill: #666;\n\t}\n\n\t.tick.tick-0 line {\n\t\tstroke-dasharray: 0;\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\timport { quadtree } from 'd3-quadtree';\n\n\tconst { data, xGet, yGet, width, height } = getContext('LayerCake');\n\n\tlet visible = false;\n\tlet found = {};\n\tlet e = {};\n\n\texport let dataset = undefined;\n\texport let x = 'x';\n\texport let y = 'y';\n\texport let searchRadius = undefined;\n\texport let selected = null;\n\n\t$: xGetter = x === 'x' ? $xGet : $yGet;\n\t$: yGetter = y === 'y' ? $yGet : $xGet;\n\t\n\t$: dataset = !selected ? undefined : $data.filter(d => d[selected.col] == selected.value);\n\n\tfunction findItem (evt) {\n\t\te = evt;\n\n\t\tconst xLayerKey = `layer${x.toUpperCase()}`;\n\t\tconst yLayerKey = `layer${y.toUpperCase()}`;\n\n\t\tfound = finder.find(evt[xLayerKey], evt[yLayerKey], searchRadius) || {};\n\t\tvisible = Object.keys(found).length > 0;\n\t}\n\n\t$: finder = quadtree()\n\t\t.extent([[-1, -1], [$width + 1, $height + 1]])\n\t\t.x(xGetter)\n\t\t.y(yGetter)\n\t\t.addAll(dataset || $data);\n\n</script>\n\n<style>\n\t.bg {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t}\n</style>\n\n<div\n\tclass=\"bg\"\n\ton:mousemove=\"{findItem}\"\n\ton:mouseout=\"{() => visible = false}\"\n></div>\n<slot\n\tx={xGetter(found) || 0}\n\ty={yGetter(found) || 0}\n\t{found}\n\t{visible}\n\t{e}\n></slot>",
    "<script>\n\timport { setContext } from 'svelte';\n\timport { writable, derived } from 'svelte/store';\n\n\timport makeAccessor from './utils/makeAccessor.js';\n\timport filterObject from './utils/filterObject.js';\n\timport calcExtents from './lib/calcExtents.js';\n\timport calcDomain from './helpers/calcDomain.js';\n\timport createScale from './helpers/createScale.js';\n\timport createGetter from './helpers/createGetter.js';\n\timport getRange from './helpers/getRange.js';\n\timport defaultScales from './settings/defaultScales.js';\n\timport defaultReverses from './settings/defaultReverses.js';\n\n\texport let ssr = false;\n\texport let pointerEvents = true;\n\texport let position = 'relative';\n\texport let percentRange = false;\n\n\texport let width = undefined;\n\texport let height = undefined;\n\n\texport let containerWidth = width || 100;\n\texport let containerHeight = height || 100;\n\n\t/* --------------------------------------------\n\t * Parameters\n\t * Values that computed properties are based on and that\n\t * can be easily extended from config values\n\t *\n\t */\n\texport let x = undefined;\n\texport let y = undefined;\n\texport let z = undefined;\n\texport let r = undefined;\n\texport let custom = {};\n\texport let data = [];\n\texport let xDomain = undefined;\n\texport let yDomain = undefined;\n\texport let zDomain = undefined;\n\texport let rDomain = undefined;\n\texport let xNice = false;\n\texport let yNice = false;\n\texport let zNice = false;\n\texport let rNice = false;\n\texport let xReverse = defaultReverses.x;\n\texport let yReverse = defaultReverses.y;\n\texport let zReverse = defaultReverses.z;\n\texport let rReverse = defaultReverses.r;\n\texport let xPadding = undefined;\n\texport let yPadding = undefined;\n\texport let zPadding = undefined;\n\texport let rPadding = undefined;\n\texport let xScale = defaultScales.x;\n\texport let yScale = defaultScales.y;\n\texport let zScale = defaultScales.y;\n\texport let rScale = defaultScales.r;\n\texport let xRange = undefined;\n\texport let yRange = undefined;\n\texport let zRange = undefined;\n\texport let rRange = undefined;\n\texport let padding = {};\n\texport let extents = {};\n\texport let flatData = undefined;\n\n\t/* --------------------------------------------\n\t * Preserve a copy of our passed in settings before we modify them\n\t * Return this to the user's context so they can reference things if need be\n\t * Add the active keys since those aren't on our settings object.\n\t * This is mostly an escape-hatch\n\t */\n\tconst config = {};\n\t$: if (x) config.x = x;\n\t$: if (y) config.y = y;\n\t$: if (z) config.z = z;\n\t$: if (r) config.r = r;\n\t$: if (xDomain) config.xDomain = xDomain;\n\t$: if (yDomain) config.yDomain = yDomain;\n\t$: if (zDomain) config.zDomain = zDomain;\n\t$: if (rDomain) config.rDomain = rDomain;\n\t$: if (xRange) config.xRange = xRange;\n\t$: if (yRange) config.yRange = yRange;\n\t$: if (zRange) config.zRange = zRange;\n\t$: if (rRange) config.rRange = rRange;\n\n\t/* --------------------------------------------\n\t * Make store versions of each parameter\n\t * Prefix these with `_` to keep things organized\n\t */\n\tconst _percentRange = writable();\n\tconst _containerWidth = writable();\n\tconst _containerHeight = writable();\n\tconst _x = writable();\n\tconst _y = writable();\n\tconst _z = writable();\n\tconst _r = writable();\n\tconst _custom = writable();\n\tconst _data = writable();\n\tconst _xDomain = writable();\n\tconst _yDomain = writable();\n\tconst _zDomain = writable();\n\tconst _rDomain = writable();\n\tconst _xNice = writable();\n\tconst _yNice = writable();\n\tconst _zNice = writable();\n\tconst _rNice = writable();\n\tconst _xReverse = writable();\n\tconst _yReverse = writable();\n\tconst _zReverse = writable();\n\tconst _rReverse = writable();\n\tconst _xPadding = writable();\n\tconst _yPadding = writable();\n\tconst _zPadding = writable();\n\tconst _rPadding = writable();\n\tconst _xScale = writable();\n\tconst _yScale = writable();\n\tconst _zScale = writable();\n\tconst _rScale = writable();\n\tconst _xRange = writable();\n\tconst _yRange = writable();\n\tconst _zRange = writable();\n\tconst _rRange = writable();\n\tconst _padding = writable();\n\tconst _flatData = writable();\n\tconst _extents = writable();\n\tconst _config = writable(config);\n\n\t$: _percentRange.set(percentRange);\n\t$: _containerWidth.set(containerWidth);\n\t$: _containerHeight.set(containerHeight);\n\t$: _x.set(makeAccessor(x));\n\t$: _y.set(makeAccessor(y));\n\t$: _z.set(makeAccessor(z));\n\t$: _r.set(makeAccessor(r));\n\t$: _xDomain.set(xDomain);\n\t$: _yDomain.set(yDomain);\n\t$: _zDomain.set(zDomain);\n\t$: _rDomain.set(rDomain);\n\t$: _custom.set(custom);\n\t$: _data.set(data);\n\t$: _xNice.set(xNice);\n\t$: _yNice.set(yNice);\n\t$: _zNice.set(zNice);\n\t$: _rNice.set(rNice);\n\t$: _xReverse.set(xReverse);\n\t$: _yReverse.set(yReverse);\n\t$: _zReverse.set(zReverse);\n\t$: _rReverse.set(rReverse);\n\t$: _xPadding.set(xPadding);\n\t$: _yPadding.set(yPadding);\n\t$: _zPadding.set(zPadding);\n\t$: _rPadding.set(rPadding);\n\t$: _xScale.set(xScale);\n\t$: _yScale.set(yScale);\n\t$: _zScale.set(zScale);\n\t$: _rScale.set(rScale);\n\t$: _xRange.set(xRange);\n\t$: _yRange.set(yRange);\n\t$: _zRange.set(zRange);\n\t$: _rRange.set(rRange);\n\t$: _padding.set(padding);\n\t$: _extents.set(filterObject(extents));\n\t$: _flatData.set(flatData || data);\n\n\t/* --------------------------------------------\n\t * Create derived values\n\t * Suffix these with `_d`\n\t */\n\tconst activeGetters_d = derived([_x, _y, _z, _r], ([$x, $y, $z, $r]) => {\n\t\treturn [\n\t\t\t{ field: 'x', accessor: $x },\n\t\t\t{ field: 'y', accessor: $y },\n\t\t\t{ field: 'z', accessor: $z },\n\t\t\t{ field: 'r', accessor: $r }\n\t\t].filter(d => d.accessor);\n\t});\n\n\tconst padding_d = derived([_padding, _containerWidth, _containerHeight], ([$padding]) => {\n\t\tconst defaultPadding = { top: 0, right: 0, bottom: 0, left: 0 };\n\t\treturn Object.assign(defaultPadding, $padding);\n\t});\n\n\tconst box_d = derived([_containerWidth, _containerHeight, padding_d], ([$containerWidth, $containerHeight, $padding]) => {\n\t\tconst b = {};\n\t\tb.top = $padding.top;\n\t\tb.right = $containerWidth - $padding.right;\n\t\tb.bottom = $containerHeight - $padding.bottom;\n\t\tb.left = $padding.left;\n\t\tb.width = b.right - b.left;\n\t\tb.height = b.bottom - b.top;\n\t\tif (b.width < 0 && b.height < 0) {\n\t\t\tconsole.error('[LayerCake] Target div has negative width and height. Did you forget to set a width or height on the container?');\n\t\t} else if (b.width < 0) {\n\t\t\tconsole.error('[LayerCake] Target div has a negative width. Did you forget to set that CSS on the container?');\n\t\t} else if (b.height < 0) {\n\t\t\tconsole.error('[LayerCake] Target div has negative height. Did you forget to set that CSS on the container?');\n\t\t}\n\t\treturn b;\n\t});\n\n\tconst width_d = derived([box_d], ([$box]) => {\n\t\treturn $box.width;\n\t});\n\n\tconst height_d = derived([box_d], ([$box]) => {\n\t\treturn $box.height;\n\t});\n\n\t/* --------------------------------------------\n\t * Calculate extents by taking the extent of the data\n\t * and filling that in with anything set by the user\n\t */\n\tconst extents_d = derived([_flatData, activeGetters_d, _extents], ([$flatData, $activeGetters, $extents]) => {\n\t\treturn { ...calcExtents($flatData, $activeGetters.filter(d => !$extents[d.field])), ...$extents };\n\t});\n\n\tconst xDomain_d = derived([extents_d, _xDomain], calcDomain('x'));\n\tconst yDomain_d = derived([extents_d, _yDomain], calcDomain('y'));\n\tconst zDomain_d = derived([extents_d, _zDomain], calcDomain('z'));\n\tconst rDomain_d = derived([extents_d, _rDomain], calcDomain('r'));\n\n\tconst xScale_d = derived([_xScale, extents_d, xDomain_d, _xPadding, _xNice, _xReverse, width_d, height_d, _xRange, _percentRange], createScale('x'));\n\tconst xGet_d = derived([_x, xScale_d], createGetter);\n\n\tconst yScale_d = derived([_yScale, extents_d, yDomain_d, _yPadding, _yNice, _yReverse, width_d, height_d, _yRange, _percentRange], createScale('y'));\n\tconst yGet_d = derived([_y, yScale_d], createGetter);\n\n\tconst zScale_d = derived([_zScale, extents_d, zDomain_d, _zPadding, _zNice, _zReverse, width_d, height_d, _zRange, _percentRange], createScale('z'));\n\tconst zGet_d = derived([_z, zScale_d], createGetter);\n\n\tconst rScale_d = derived([_rScale, extents_d, rDomain_d, _rPadding, _rNice, _rReverse, width_d, height_d, _rRange, _percentRange], createScale('r'));\n\tconst rGet_d = derived([_r, rScale_d], createGetter);\n\n\tconst xRange_d = derived([xScale_d], getRange);\n\tconst yRange_d = derived([yScale_d], getRange);\n\tconst zRange_d = derived([zScale_d], getRange);\n\tconst rRange_d = derived([rScale_d], getRange);\n\n\tconst aspectRatio_d = derived([width_d, height_d], ([$aspectRatio, $width, $height]) => {\n\t\treturn $width / $height;\n\t});\n\n\t$: context = {\n\t\tactiveGetters: activeGetters_d,\n\t\twidth: width_d,\n\t\theight: height_d,\n\t\tpercentRange: _percentRange,\n\t\taspectRatio: aspectRatio_d,\n\t\tcontainerWidth: _containerWidth,\n\t\tcontainerHeight: _containerHeight,\n\t\tx: _x,\n\t\ty: _y,\n\t\tz: _z,\n\t\tr: _r,\n\t\tcustom: _custom,\n\t\tdata: _data,\n\t\txNice: _xNice,\n\t\tyNice: _yNice,\n\t\tzNice: _zNice,\n\t\trNice: _rNice,\n\t\txReverse: _xReverse,\n\t\tyReverse: _yReverse,\n\t\tzReverse: _zReverse,\n\t\trReverse: _rReverse,\n\t\txPadding: _xPadding,\n\t\tyPadding: _yPadding,\n\t\tzPadding: _zPadding,\n\t\trPadding: _rPadding,\n\t\tpadding: padding_d,\n\t\tflatData: _flatData,\n\t\textents: extents_d,\n\t\txDomain: xDomain_d,\n\t\tyDomain: yDomain_d,\n\t\tzDomain: zDomain_d,\n\t\trDomain: rDomain_d,\n\t\txRange: xRange_d,\n\t\tyRange: yRange_d,\n\t\tzRange: zRange_d,\n\t\trRange: rRange_d,\n\t\tconfig: _config,\n\t\txScale: xScale_d,\n\t\txGet: xGet_d,\n\t\tyScale: yScale_d,\n\t\tyGet: yGet_d,\n\t\tzScale: zScale_d,\n\t\tzGet: zGet_d,\n\t\trScale: rScale_d,\n\t\trGet: rGet_d\n\t};\n\n\t$: setContext('LayerCake', context);\n</script>\n\n{#if (ssr === true || typeof window !== 'undefined')}\n\t<div\n\t\tclass=\"layercake-container\"\n\t\tstyle=\"\n\t\t\tposition:{position};\n\t\t\t{position === 'absolute' ? 'top:0;right:0;bottom:0;left:0;' : ''}\n\t\t\t{pointerEvents === false ? 'pointer-events:none;' : ''}\n\t\t\"\n\t\tbind:clientWidth={containerWidth}\n\t\tbind:clientHeight={containerHeight}\n\t>\n\t\t<slot\n\t\t\twidth={$width_d}\n\t\t\theight={$height_d}\n\t\t\taspectRatio={$aspectRatio_d}\n\t\t\tcontainerWidth={$_containerWidth}\n\t\t\tcontainerHeight={$_containerHeight}\n\t\t></slot>\n\t</div>\n{/if}\n\n<style>\n\t.layercake-container,\n\t.layercake-container :global(*) {\n\t\tbox-sizing: border-box;\n\t}\n\t.layercake-container {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { padding } = getContext('LayerCake');\n</script>\n\n<div\n\tclass=\"layercake-layout-html\"\n\tstyle=\"top: {$padding.top}px; right:{$padding.right}px; bottom:{$padding.bottom}px; left:{$padding.left}px;{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<slot></slot>\n</div>\n\n<style>\n\tdiv,\n\tslot {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let fixedAspectRatio = 1;\n\texport let viewBox = `0 0 100 ${100 / fixedAspectRatio}`;\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { padding } = getContext('LayerCake');\n</script>\n\n<svg\n\t{viewBox}\n\tpreserveAspectRatio=\"none\"\n\tstyle=\"top: {$padding.top}px; right:0px; bottom:0px; left:{$padding.left}px;width:calc(100% - {($padding.left + $padding.right)}px);height:calc(100% - {($padding.top + $padding.bottom)}px);{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\n\t<slot></slot>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: visible;\n\t}\n\tsvg :global(*) {\n\t\tvector-effect: non-scaling-stroke;\n\t}\n</style>\n",
    "<script>\n\timport { getContext } from 'svelte';\n\n\texport let viewBox = undefined;\n\texport let zIndex = undefined;\n\texport let pointerEvents = undefined;\n\n\tlet zIndexStyle = '';\n\t$: zIndexStyle = typeof zIndex !== 'undefined' ? `z-index:${zIndex};` : '';\n\n\tlet pointerEventsStyle = '';\n\t$: pointerEventsStyle = pointerEvents === false ? 'pointer-events:none;' : '';\n\n\tconst { containerWidth, containerHeight, padding } = getContext('LayerCake');\n</script>\n<svg\n\tclass=\"layercake-layout-svg\"\n\t{viewBox}\n\twidth={$containerWidth}\n\theight={$containerHeight}\n\tstyle=\"{zIndexStyle}{pointerEventsStyle}\"\n>\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\t<g transform=\"translate({$padding.left}, {$padding.top})\">\n\t\t<slot></slot>\n\t</g>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\toverflow: visible;\n\t}\n</style>\n",
    "<script>\n\timport { setContext, onMount } from \"svelte\";\n\timport { getData, setColors } from \"./utils.js\";\n\timport { themes, regions, colors, datakeys } from './config.js';\n\timport { ScatterChart } from \"@onsvisual/svelte-charts\";\n\timport ONSHeader from \"./ONSHeader.svelte\";\n\timport ONSFooter from \"./ONSFooter.svelte\";\n\timport Header from \"./Header.svelte\";\n\timport Section from \"./Section.svelte\";\n\timport Media from \"./Media.svelte\";\n\timport Scroller from \"./Scroller.svelte\";\n\timport Filler from \"./Filler.svelte\";\n\timport Divider from \"./Divider.svelte\";\n\timport Map from \"./Map.svelte\";\n\n\t// STYLE CONFIG\n\t// Set theme globally (options are 'light' or 'dark')\n\tlet theme = \"light\";\n\tsetContext(\"theme\", theme);\n\tsetColors(themes, theme);\n\n\t// SCROLLYTELLING CONFIG\n\t// Config\n\tconst threshold = 0.65;\n\t// State\n\tlet index = [];\n\tlet indexPrev = [];\n\tonMount(() => {\n\t\tindexPrev = [...index];\n\t});\n\n\t// CHART CODE\n\t// Config\n\tconst categories = regions.map((d) => d.code);\n\tconst url = \"https://raw.githubusercontent.com/bothness/geo-data/main/csv/imd-values-2019.csv\";\n\tconst catKey = \"region_code\";\n\t// State\n\tlet data;\n\tlet places;\n\tlet selected;\n\tlet xKey = \"income\";\n\tlet yKey = \"employment\";\n\n\tgetData(url)\n\t\t.then((result) => (data = result))\n\t\t.then(() => {\n\t\t\tlet codes = [];\n\t\t\tlet array = [];\n\t\t\tdata.forEach((d) => {\n\t\t\t\tif (!codes.includes(d.lad_code)) {\n\t\t\t\t\tcodes.push(d.lad_code);\n\t\t\t\t\tarray.push({\n\t\t\t\t\t\tcode: d.lad_code,\n\t\t\t\t\t\tname: d.lad_name,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t});\n\t\tarray.sort((a, b) => a.name.localeCompare(b.name));\n\t\tplaces = array;\n\t});\n\t\n\t// Actions for CHART scroller\n\tconst chartActions = [\n\t\t() => {\n\t\t\txKey = \"income\";\n\t\t\tyKey = \"employment\";\n\t\t},\n\t\t() => {\n\t\t\txKey = \"income\";\n\t\t\tyKey = \"health\";\n\t\t},\n\t\t() => {\n\t\t\txKey = \"housing\";\n\t\t\tyKey = \"health\";\n\t\t}\n\t];\n\t\n\t// Reactive code to trigger CHART actions\n\t$: if (index[0] != indexPrev[0]) {\n\t\tif (chartActions[+index[0]]) {\n\t\t\tchartActions[+index[0]]();\n\t\t}\n\t\tindexPrev[0] = index[0];\n\t}\n\t\n\t// MAP CODE\n\t// Config\n\tconst mapstyle = 'https://bothness.github.io/ons-basemaps/data/style-omt.json';\n\tconst mapbounds = {\n\t\tew: [[-5.816, 49.864], [1.863, 55.872]],\n\t\tfareham: [[-1.2280, 50.8368], [-1.1650, 50.8699]],\n\t\tnewport: [[-3.0682, 51.5448], [-2.9170, 51.6258]]\n\t};\n\t// State\n\tlet map = null;\n\n\t// Actions for MAP scroller\n\tconst mapActions = [\n\t\t() => { map.fitBounds(mapbounds.ew) },\n\t\t() => { map.fitBounds(mapbounds.fareham) },\n\t\t() => { map.fitBounds(mapbounds.newport) }\n\t];\n\t\n\t// Reactive code to trigger MAP actions\n\t$: if (map && index[1] != indexPrev[1]) {\n\t\tif (mapActions[+index[1]]) {\n\t\t\tmapActions[+index[1]]();\n\t\t}\n\t\tindexPrev[1] = index[1];\n\t}\n\n</script>\n\n<ONSHeader filled={true} />\n\n<Header bgimage=\"./img/bg-dark.jpg\" bgfixed={true} theme=\"dark\">\n\t<h1 class=\"text-shadow\">This is the title of the article</h1>\n\t<p class=\"inset-medium text-big text-shadow\">\n\t\tThis is a short text description of the article that might take up a couple of lines\n\t</p>\n\t<div class=\"text-shadow\" style=\"margin-top: 48px;\">\n\t\tScroll to begin<br />\n\t\t<img src=\"./img/scroll-down-white.svg\" class=\"svg-icon bounce\" alt=\"down arrow\"/>\n\t</div>\n</Header>\n\n<Filler theme=\"dark\">\n\t<p class=\"text-big\">\n\t\tThis is a large text caption centred on a full-screen page\n\t</p>\n</Filler>\n\n<Section>\n\t<h2>This is a section title</h2>\n\t<p>\n\t\tThis is a short paragraph of text to demonstrate the standard column width \n\t\tfont size and line spacing of the template.\n\t</p>\n\t<p>\n\t\tThis is a second short paragraph of text to demonstrate the size of the\n\t\tparagraph spacing in the template.\n\t</p>\n\t<blockquote class=\"text-indent\">\n\t\t\"This is an example of a large embedded quotation.\"&mdash;Person\n\t</blockquote>\n\t<p>\n\t\tBelow is a grid that could contain charts or any other kind of visual media.\n\t\tThe grid can fit in a standard, wide or full-width column, and the media\n\t\twidth itself can be narrow (min 200px), medium (min 300px), wide (min 500px)\n\t\tor full-width. The grid is responsive, and will re-flow on smaller screens. \n\t</p>\n</Section>\n\n<Media\n\tcol=\"medium\"\n\tgrid=\"medium\"\n\tcaption='This is an optional caption for the above media. It can contain HTML code and <a href=\"#\">hyperlinks</a>, and wrap onto multiple lines.'>\n\t<div class=\"media\">media</div>\n\t<div class=\"media\">media</div>\n\t<div class=\"media\">media</div>\n\t<div class=\"media\">media</div>\n</Media>\n\n<Divider />\n\n<Section>\n\t<h2>This is a dynamic chart section</h2>\n\t<p>\n\t\tThe chart below will respond to the captions as you scroll down.\n\t</p>\n</Section>\n\n<Scroller {threshold} bind:index={index[0]} splitscreen={true}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"col-wide height-full\" style=\"position: relative; top: 45px;\">\n\t\t\t\t{#if data && xKey && yKey}\n\t\t\t\t<ScatterChart diameter={3} {data} {xKey} {yKey} {catKey} {colors} {categories} {selected} />\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>There is a strong correlation between the IMD mesasures for <span class=\"em em-muted\">income</span> and <span class=\"em em-muted\">employment</span>.</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>There is a strong correlation between the IMD mesasures for <span class=\"em em-muted\">income</span> and <span class=\"em em-muted\">health</span>.</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>There is a weak correlation between the IMD mesasures for <span class=\"em em-muted\">housing</span> and <span class=\"em em-muted\">health</span>.</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<h3>Explore the data</h3>\n\t\t\t\t{#if data}\n\t\t\t\t<nobr>\n\t\t\t\t\t<span class=\"label-block\">X Axis</span>\n\t\t\t\t\t<select bind:value={xKey}>\n\t\t\t\t\t\t{#each Object.keys(datakeys) as key}\n\t\t\t\t\t\t\t<option value={key}>{datakeys[key]}</option>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t</select>\n\t\t\t\t</nobr>\n\t\t\t\t<nobr>\n\t\t\t\t\t<span class=\"label-block\">Y Axis</span>\n\t\t\t\t\t<select bind:value={yKey}>\n\t\t\t\t\t\t{#each Object.keys(datakeys) as key}\n\t\t\t\t\t\t\t<option value={key}>{datakeys[key]}</option>\n\t\t\t\t\t\t{/each}\n\t\t\t\t\t</select>\n\t\t\t\t</nobr>\n\t\t\t\t{#if places}\n\t\t\t\t<nobr>\n\t\t\t\t\t\t<span class=\"label-block\">District</span>\n\t\t\t\t\t\t<!-- svelte-ignore a11y-no-onchange -->\n\t\t\t\t\t\t<select bind:value={selected}>\n\t\t\t\t\t\t\t<option value={null}>All</option>\n\t\t\t\t\t\t\t{#each places as place}\n\t\t\t\t\t\t\t\t<option value={{ value: place.code, col: 'lad_code' }}>\n\t\t\t\t\t\t\t\t\t{place.name}\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</nobr>\n\t\t\t\t{/if}\n\t\t\t\t{/if}\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\n<Divider />\n\n<Section>\n\t<h2>This is a full-bleed media demo</h2>\n\t<p>\n\t\tBelow is an example of a media grid where the column with is set to \"full\"\n\t\tand the grid width is set to default (100%).\n\t</p>\n</Section>\n\n<Media col=\"full\" height={600} caption=\"This is an optional caption for the above media.\">\n\t<div class=\"media\">full-bleed media</div>\n</Media>\n\n<Divider />\n\n<Section>\n\t<h2>This is a dynamic map section</h2>\n\t<p class=\"mb\">\n\t\tThe map below will respond to the captions as you scroll down.\n\t</p>\n</Section>\n\n<Scroller {threshold} bind:index={index[1]}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"col-full height-full\">\n\t\t\t\t<Map style={mapstyle} bind:map={map} />\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>This is a map zoomed to the extents of <span class=\"em em-muted\">England and Wales</span>.</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>This is where <span class=\"em em-muted\">Fareham, Hampshire</span> is on the map.</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p>This is where <span class=\"em em-muted\">Newport, Gwent</span> is on the map.</p>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\n<Divider />\n\n<Section>\n\t<h2>This is a wide media grid demo</h2>\n\t<p>\n\t\tBelow is an example of a media grid where the column width is set to \"wide\" \n\t\tand the grid width is set to \"narrow\".\n\t</p>\n</Section>\n\n<Media\n\tcol=\"wide\"\n\tgrid=\"narrow\"\n\tcaption=\"This is an optional caption for the above media.\">\n\t<div class=\"media\">media</div>\n\t<div class=\"media\">media</div>\n\t<div class=\"media\">media</div>\n\t<div class=\"media\">media</div>\n</Media>\n\n<Section>\n\t<p>\n\t\tThis is a final paragraph of text to end the demo article layout.\n\t</p>\n</Section>\n\n<ONSFooter />\n\n<style>\n\t/* Styles specific to elements within the demo */\n\t.svg-icon {\n\t\twidth: 48px;\n\t\theight: 48px;\n\t}\n\t.bounce {\n\t\tanimation-duration: 2s;\n\t\tanimation-iteration-count: infinite;\n\t\tanimation-name: bounce;\n\t\tanimation-timing-function: ease;\n\t}\n\t@keyframes bounce {\n\t\t0%   { transform: translateY(10px); }\n\t\t30%  { transform: translateY(-10px); }\n\t\t50%  { transform: translateY(10px); }\n\t\t100% { transform: translateY(10px); }\n\t}\n\t.label-block {\n\t\tdisplay: inline-block;\n\t\ttext-align: right;\n\t\twidth: 80px;\n\t}\n\tselect {\n\t\twidth: 210px;\n\t}\n\t/* The properties below make the media DIVs grey, for visual purposes in demo */\n\t.media {\n\t  background-color: #f0f0f0;\n\t  display: -webkit-box;\n\t  display: -ms-flexbox;\n\t  display: flex;\n\t  -webkit-box-orient: vertical;\n\t  \t-webkit-box-direction: normal;\n\t      -ms-flex-flow: column;\n\t          flex-flow: column;\n\t  -webkit-box-pack: center;\n\t      -ms-flex-pack: center;\n\t          justify-content: center;\n\t  text-align: center;\n\t  color: #aaa;\n  }\n</style>",
    "<script>\n\timport { themes } from './config.js';\n\timport { getContext } from 'svelte';\n\n  export let theme = getContext('theme');\n  export let hr = true;\n</script>\n\n<section style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"col-medium\">\n    {#if hr}\n    <hr style=\"color: {themes[theme]['muted']}\"/>\n    {:else}\n    <hr style=\"color: {themes[theme]['muted']}; border: none;\"/>\n    {/if}\n\t</div>\n</section>\n\n<style>\n  hr {\n    width: 65px;\n    border: none;\n    border-top: 4px dotted;\n    margin: 40px auto -10px auto;\n  }\n</style>\n\n",
    "<script>\n\timport { onMount } from 'svelte';\n\timport mapbox from 'mapbox-gl';\n\t\n\texport let location = {\n\t\tbounds: [[-5.816, 49.864], [1.863, 55.872]] // England & Wales bounding box\n\t};\n\texport let style;\n\texport let map;\n\t\n\tlet container;\n\tlet options;\n\t\n\tif (location.bounds) {\n\t\toptions = { bounds: location.bounds };\n\t} else if (location.lon && location.lat) {\n\t\toptions = {\n\t\t\tcenter: [location.lon, location.lat]\n\t\t}\n\t\tif (location.zoom) {\n\t\t\toptions.zoom = location.zoom;\n\t\t}\n\t};\n\n\tonMount(() => {\n\t\tconst link = document.createElement('link');\n\t\tlink.rel = 'stylesheet';\n\t\tlink.href = 'https://unpkg.com/mapbox-gl@1.13.0/dist/mapbox-gl.css';\n\n\t\tlink.onload = () => {\n\t\t\tmap = new mapbox.Map({\n\t\t\t\tcontainer,\n\t\t\t\tstyle: style,\n\t\t\t\tinteractive: false,\n\t\t\t\t...options\n\t\t\t});\n\t\t\tmap.scrollZoom.disable();\n\t\t};\n\n\t\tdocument.head.appendChild(link);\n\n\t\treturn () => {\n\t\t\tmap.remove();\n\t\t\tlink.parentNode.removeChild(link);\n\t\t};\n\t});\n</script>\n\n<style>\n\tdiv {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n</style>\n\n<div bind:this={container}>\n\t{#if map}\n\t\t<slot></slot>\n\t{/if}\n</div>",
    "<script>\n  import { themes } from './config.js';\n\timport { onMount, getContext } from 'svelte';\n\timport { debounce } from 'debounce';\n\t\n\tconst colWidths = {\n\t\t'narrow': 200,\n\t\t'medium': 320,\n\t\t'wide': 500\n\t};\n\n  export let theme = getContext('theme');\n  export let col = 'medium';\n  export let grid = null;\n  export let caption = null;\n\texport let height = '200';\n\texport let gap = 12;\n\t\n\tconst minWidth = grid && colWidths[grid] ? colWidths[grid] : null;\n\t\n\tlet gridWidth;\n\tlet cols;\n\t\n\tlet el;\n\tlet divs;\n\tlet count;\n\t\n\tonMount(() => {\n\t\tresize();\n\t});\n\t\n\tconst update = debounce(resize, 200);\n\t\n\tfunction resize() {\n\t\tdivs = el.querySelectorAll('div');\n\t\tcount = divs.length;\n\t\tcols = !minWidth || gridWidth <= minWidth ? 1 : Math.floor(gridWidth / minWidth);\n\t\tmakeCols();\n\t}\n\t\n\tfunction makeCols() {\n\t\tlet r = Math.ceil(count / cols) > 1 ? `-ms-grid-rows: ${height}px (${gap}px ${height}px)[${Math.ceil(count / cols) - 1}]; grid-template-rows: ${height}px repeat(${Math.ceil(count / cols) - 1}, ${gap}px ${height}px);` : `-ms-grid-rows: ${height}px; grid-template-rows: ${height}px;`;\n\t\tlet c = cols > 1 ? `-ms-grid-columns: 1fr (${gap}px 1fr)[${cols - 1}]; grid-template-columns: 1fr repeat(${cols - 1}, ${gap}px 1fr);` : '';\n\t\tel.style.cssText = r + c;\n\t\tdivs.forEach((div, i) => {\n\t\t\tlet col = (i % cols) * 2 + 1;\n\t\t\tlet row = Math.floor(i / cols) * 2 + 1;\n\t\t\tdiv.style.cssText = `-ms-grid-column: ${col}; -ms-grid-row: ${row}; grid-column: ${col}; grid-row: ${row};`;\n\t\t});\n\t}\n\t\n\t$: minWidth && gridWidth && update();\n</script>\n\n<figure style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n\t<div class=\"col-{col}\">\n\t\t<div bind:this={el} bind:clientWidth={gridWidth} class=\"grid\">\n\t\t\t<slot></slot>\n\t\t</div>\n  </div>\n</figure>\n{#if caption}\n<caption style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['background']};\">\n  <div class=\"col-medium\">\n    <div class=\"caption\">{@html caption}</div>\n  </div>\n</caption>\n{/if}\n\n<style>\n\t.grid {\n\t\tdisplay: grid;\n\t\tdisplay: -ms-grid;\n\t\t-ms-grid-columns: 1fr;\n\t\tgrid-template-columns: 1fr;\n    margin-top: 40px;\n\t}\n</style>",
    "<script>\n\timport { themes } from './config.js';\n\timport { getContext } from 'svelte';\n\n\texport let theme = getContext('theme');\n</script>\n\n<footer style=\"color: {themes[theme]['text']}; background-color: {themes[theme]['pale']};\">\n\t<div class=\"col-wide\" data-analytics=\"footer\">\n\t\t{#if theme == 'dark'}\n\t\t<img\n\t\t\tclass=\"logo-img\"\n\t\t\tsrc=\"./img/ons-logo-neg-en.svg\"\n\t\t\talt=\"Office for National Statistics\" />\n\t\t{:else}\n\t\t<img\n\t\t\tclass=\"logo-img\"\n\t\t\tsrc=\"./img/ons-logo-black-en.svg\"\n\t\t\talt=\"Office for National Statistics\" />\n\t\t{/if}\n\t\t<ul>\n\t\t\t<li><a href=\"https://www.ons.gov.uk/aboutus/contactus\" class=\"list__link\" style=\"color: {themes[theme]['muted']}\">Contact us</a></li>\n\t\t\t<li><a href=\"https://www.ons.gov.uk/help/privacynotice\" class=\"list__link\" style=\"color: {themes[theme]['muted']}\">Cookies and privacy</a></li>\n\t\t</ul>\n\t\t<hr style=\"border-top-color: {themes[theme]['muted']}\" />\n\t\t<div class=\"license\">\n\t\t\t<svg class=\"ogl-img\" viewBox=\"0 0 59 24\" xmlns=\"http://www.w3.org/2000/svg\">\n\t\t\t\t<title>UK Open Government Licence</title>\n\t\t\t\t<path fill=\"{themes[theme]['muted']}\" d=\"M59,17.5v6.2H45.3V4l6.2-3.9v17.4H59z M33.6,13h9.8v10.7H43L40.6,21c-2.1,1.8-4.9,3-7.9,3 c-4.4,0-8.3-2.4-10.4-6.1c-2.1,3.6-5.9,6.1-10.4,6.1C5.4,23.9,0,18.6,0,12C0,5.4,5.4,0.1,11.9,0.1c4.5,0,8.4,2.5,10.4,6.1 c2.1-3.6,5.9-6.1,10.4-6.1c4.2,0,7.9,2.2,10.1,5.5l-5.2,3.3c-1-1.6-2.8-2.7-4.8-2.7C29.6,6.2,27,8.8,27,12s2.6,5.8,5.8,5.8 c1.5,0,2.8-0.5,3.8-1.4L33.6,13z M17.7,12c0-3.2-2.6-5.7-5.8-5.7S6.2,8.8,6.2,12s2.6,5.8,5.8,5.8S17.7,15.2,17.7,12z\"/>\n\t\t\t</svg>\n\t\t\tAll content is available under the\n\t\t\t<a\n\t\t\t\thref=\"https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/\"\n\t\t\t\tclass=\"external-link\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noopener\"\n\t\t\t\tstyle=\"color: {themes[theme]['muted']}\">Open Government Licence v3.0</a>, \n\t\t\texcept where otherwise stated\n\t\t</div>\n\t</div>\n</footer>\n\n<style>\n\tfooter {\n\t\tpadding-bottom: 72px;\n\t\tpadding-top: 36px;\n\t\tfont-size: 18px;\n\t}\n\tfooter a {\n\t\t-webkit-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t\ttext-decoration: underline;\n\t\tdisplay: inline-block;\n\t}\n\tfooter a:hover {\n\t\ttext-decoration: none;\n\t}\n\tfooter a:active {\n\t\toutline: 3px solid transparent;\n\t\tbackground-color: #fd0;\n\t\t-webkit-box-shadow: 0 -2px #fd0, 0 4px #222;\n\t\tbox-shadow: 0 -2px #fd0, 0 4px #222;\n\t\tcolor: #222;\n\t\ttext-decoration: none;\n\t}\n\tfooter hr {\n\t\tmargin-bottom: 27px;\n\t\tmargin-top: 36px;\n\t\tborder: none;\n\t\tborder-top: 1px solid #777;\n\t}\n\tul {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t}\n\tli {\n\t\tmargin-right: 18px;\n\t\tdisplay: inline-block;\n\t}\n\t.logo-img {\n\t\tmargin-bottom: 27px;\n\t}\n\t.ogl-img {\n\t\tmargin: 0 0.5rem 0.2rem 0;\n\t\twidth: 59px;\n\t\theight: 24px;\n\t\tvertical-align: middle;\n\t}\n\t.license {\n\t\tvertical-align: top;\n\t}\n</style>",
    "<script>\n  import { themes } from './config.js';\n\timport { getContext } from 'svelte';\n\n\texport let theme = getContext('theme');\n\texport let filled = false;\n</script>\n\n<nav style=\"border-bottom-color: {themes[theme]['muted']}; {filled ? 'background-color: ' +  themes[theme]['background'] + ';' : ''}\">\n  <div class=\"col-wide middle center\">\n\t\t<a href=\"https://www.ons.gov.uk/\">\n\t\t\t<picture>\n\t\t\t\t{#if theme == 'dark'}\n\t\t\t\t<img src=\"./img/ons-logo-neg-en.svg\" alt=\"Office for National Statistics\">\n\t\t\t\t{:else if filled == true}\n\t\t\t\t<img src=\"./img/ons-logo-pos-en.svg\" alt=\"Office for National Statistics\">\n\t\t\t\t{:else}\n\t\t\t\t<img src=\"./img/ons-logo-black-en.svg\" alt=\"Office for National Statistics\">\n\t\t\t\t{/if}\n\t\t\t</picture>\n\t\t</a>\n  </div>\n</nav>\n\n<style>\n\tnav {\n\t\t-webkit-box-sizing: border-box;\n\t\tbox-sizing: border-box;\n\t\tposition: relative;\n\t\theight: 46px;\n\t\tmargin-bottom: -46px;\n\t\tborder-bottom: 1px solid #777;\n\t}\n\tpicture {\n\t\tposition: relative;\n\t\ttop: -3px;\n\t}\n\timg {\n\t\twidth: 270px;\n\t}\n</style>",
    "<script context=\"module\">\r\n  // Based on svelte-scroller by Rich Harris\r\n  // https://github.com/sveltejs/svelte-scroller\r\n  // Patched to transpile to IE 11\r\n\r\n\tconst handlers = [];\r\n\tlet manager;\r\n\r\n\tif (typeof window !== 'undefined') {\r\n\t\tconst run_all = () => handlers.forEach(fn => fn());\r\n\r\n\t\twindow.addEventListener('scroll', run_all);\r\n\t\twindow.addEventListener('resize', run_all);\r\n\t}\r\n\r\n\tif (typeof IntersectionObserver !== 'undefined') {\r\n\t\tconst map = new Map();\r\n\r\n\t\tconst observer = new IntersectionObserver((entries, observer) => {\r\n\t\t\tentries.forEach(entry => {\r\n\t\t\t\tconst update = map.get(entry.target);\r\n\t\t\t\tconst index = handlers.indexOf(update);\r\n\r\n\t\t\t\tif (entry.isIntersecting) {\r\n\t\t\t\t\tif (index === -1) handlers.push(update);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tupdate();\r\n\t\t\t\t\tif (index !== -1) handlers.splice(index, 1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}, {\r\n\t\t\trootMargin: '400px 0px' // TODO why 400?\r\n\t\t});\r\n\r\n\t\tmanager = {\r\n\t\t\tadd: ({ outer, update }) => {\r\n\t\t\t\tconst { top, bottom } = outer.getBoundingClientRect();\r\n\r\n\t\t\t\tif (top < window.innerHeight && bottom > 0) handlers.push(update);\r\n\r\n\t\t\t\tmap.set(outer, update);\r\n\t\t\t\tobserver.observe(outer);\r\n\t\t\t},\r\n\r\n\t\t\tremove: ({ outer, update }) => {\r\n\t\t\t\tconst index = handlers.indexOf(update);\r\n\t\t\t\tif (index !== -1) handlers.splice(index, 1);\r\n\r\n\t\t\t\tmap.delete(outer);\r\n\t\t\t\tobserver.unobserve(outer);\r\n\t\t\t}\r\n\t\t};\r\n\t} else {\r\n\t\tmanager = {\r\n\t\t\tadd: ({ update }) => {\r\n\t\t\t\thandlers.push(update);\r\n\t\t\t},\r\n\r\n\t\t\tremove: ({ update }) => {\r\n\t\t\t\tconst index = handlers.indexOf(update);\r\n\t\t\t\tif (index !== -1) handlers.splice(index, 1);\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n</script>\r\n\r\n<script>\r\n\timport { onMount } from 'svelte';\r\n\r\n\t// config\r\n\texport let top = 0;\r\n\texport let bottom = 1;\r\n\texport let threshold = 0.5;\r\n\texport let query = 'section';\r\n\texport let parallax = false;\r\n\r\n\t// bindings\r\n\texport let index = 0;\r\n\texport let count = 0;\r\n\texport let offset = 0;\r\n\texport let progress = 0;\r\n\texport let visible = false;\r\n\texport let splitscreen = false; // Add class to allow for split screen option\r\n\r\n\tlet outer;\r\n  let bgContainer; // IE patch. Container binding to update inline style\r\n\tlet foreground;\r\n\tlet background;\r\n\tlet left;\r\n\tlet sections;\r\n\tlet wh = 0;\r\n\tlet fixed;\r\n\tlet offset_top;\r\n\tlet width = 1;\r\n\tlet height;\r\n\tlet inverted;\r\n\r\n\t$: top_px = Math.round(top * wh);\r\n\t$: bottom_px = Math.round(bottom * wh);\r\n\t$: threshold_px = Math.round(threshold * wh);\r\n\r\n\t$: (top, bottom, threshold, parallax, update());\r\n\r\n\tonMount(() => {\r\n\t\tsections = foreground.querySelectorAll(query);\r\n\t\tcount = sections.length;\r\n\r\n\t\tupdate();\r\n\r\n\t\tconst scroller = { outer, update };\r\n\r\n\t\tmanager.add(scroller);\r\n\t\treturn () => manager.remove(scroller);\r\n\t});\r\n\r\n\t// IE patch. BG container style (fixed/unfixed) set via function\r\n  function setFixed() {\r\n    if (bgContainer) {\r\n      let style = `position: ${fixed ? 'fixed' : 'absolute'}; top: 0; transform: translate(0, ${offset_top}px); width: ${width}px; z-index: ${inverted ? 3 : 1};`;\r\n      bgContainer.style.cssText = style;\r\n    }\r\n  }\r\n\r\n\tfunction update() {\r\n\t\tif (!foreground) return;\r\n\r\n\t\t// re-measure outer container\r\n\t\tconst bcr = outer.getBoundingClientRect();\r\n\t\tleft = bcr.left;\r\n\t\twidth = bcr.right - left;\r\n\r\n\t\t// determine fix state\r\n\t\tconst fg = foreground.getBoundingClientRect();\r\n\t\tconst bg = background.getBoundingClientRect();\r\n\r\n\t\tvisible = fg.top < wh && fg.bottom > 0;\r\n\r\n\t\tconst foreground_height = fg.bottom - fg.top;\r\n\t\tconst background_height = bg.bottom - bg.top;\r\n\r\n\t\tconst available_space = bottom_px - top_px;\r\n\t\tprogress = (top_px - fg.top) / (foreground_height - available_space);\r\n\r\n\t\tif (progress <= 0) {\r\n\t\t\toffset_top = 0;\r\n      if (fixed) {\r\n        fixed = false;\r\n        setFixed();\r\n      } // Non-IE specific patch to avoid setting style repeatedly\r\n\t\t} else if (progress >= 1) {\r\n\t\t\toffset_top = parallax\r\n\t\t\t\t? (foreground_height - background_height)\r\n\t\t\t\t: (foreground_height - available_space);\r\n      if (fixed) {\r\n        fixed = false;\r\n        setFixed();\r\n      }\r\n\t\t} else {\r\n\t\t\toffset_top = parallax ?\r\n\t\t\t\tMath.round(top_px - progress * (background_height - available_space)) :\r\n\t\t\t\ttop_px;\r\n      if (!fixed) {\r\n        fixed = true;\r\n        setFixed();\r\n      }\r\n\t\t}\r\n\r\n\t\tfor (index = 0; index < sections.length; index += 1) {\r\n\t\t\tconst section = sections[index];\r\n\t\t\tconst { top } = section.getBoundingClientRect();\r\n\r\n\t\t\tconst next = sections[index + 1];\r\n\t\t\tconst bottom = next ? next.getBoundingClientRect().top : fg.bottom;\r\n\r\n\t\t\toffset = (threshold_px - top) / (bottom - top);\r\n\t\t\tif (bottom >= threshold_px) break;\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<svelte:window bind:innerHeight={wh}/>\r\n\r\n<svelte-scroller-outer bind:this={outer} class:splitscreen>\r\n\t<svelte-scroller-background-container class='background-container' bind:this={bgContainer}>\r\n\t\t<svelte-scroller-background bind:this={background}>\r\n\t\t\t<slot name=\"background\"></slot>\r\n\t\t</svelte-scroller-background>\r\n\t</svelte-scroller-background-container>\r\n\r\n\t<svelte-scroller-foreground bind:this={foreground}>\r\n\t\t<slot name=\"foreground\"></slot>\r\n\t</svelte-scroller-foreground>\r\n</svelte-scroller-outer>\r\n\r\n<style>\r\n\tsvelte-scroller-outer {\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\tsvelte-scroller-background {\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\tsvelte-scroller-foreground {\r\n\t\tdisplay: block;\r\n\t\tposition: relative;\r\n\t\tz-index: 2;\r\n\t}\r\n\r\n\tsvelte-scroller-foreground::after {\r\n\t\tcontent: ' ';\r\n\t\tdisplay: block;\r\n\t\tclear: both;\r\n\t}\r\n\r\n\tsvelte-scroller-background-container {\r\n\t\tdisplay: block;\r\n\t\tposition: absolute;\r\n\t\twidth: 100%;\r\n\t\tmax-width: 100%;\r\n\t\tpointer-events: none;\r\n\t\t/* height: 100%; */\r\n\r\n\t\t/* in theory this helps prevent jumping */\r\n\t\twill-change: transform;\r\n\t\t/* -webkit-transform: translate3d(0, 0, 0);\r\n\t\t-moz-transform: translate3d(0, 0, 0);\r\n\t\ttransform: translate3d(0, 0, 0); */\r\n\t}\r\n</style>"
  ],
  "names": [],
  "mappings": "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"
}